<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="938px" preserveAspectRatio="none" style="width:1207px;height:938px;background:#FFFFFF;" version="1.1" viewBox="0 0 1207 938" width="1207px" zoomAndPan="magnify"><defs/><g><!--MD5=[39f575153bd46be7fc06a5cd7e82613c]
class LowLevelDriver--><g id="elem_LowLevelDriver"><rect codeLine="2" fill="#F1F1F1" height="334.0188" id="LowLevelDriver" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="1193" x="7" y="7"/><ellipse cx="548.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M548.2188,29.9219 Q546.4688,29.9219 545.3281,29.1875 Q544.2031,28.4375 543.6406,27.0938 Q543.0938,25.7344 543.0938,23.9375 Q543.0938,21.9063 543.75,20.4531 Q544.4063,19 545.6875,18.2188 Q546.9688,17.4375 548.8438,17.4375 Q549.7344,17.4375 550.4063,17.625 Q551.0781,17.7969 551.7656,18.1406 L550.9531,20.1563 Q550.3281,19.8438 549.7813,19.7188 Q549.25,19.5938 548.7656,19.5938 Q547.5938,19.5938 546.8906,20.125 Q546.1875,20.6563 545.8906,21.6094 Q545.5938,22.5625 545.5938,23.8281 Q545.5938,25.8438 546.3125,26.8125 Q547.0313,27.7656 548.625,27.7656 Q549.2188,27.7656 549.8438,27.6094 Q550.4688,27.4531 551.2969,27.0781 L551.2969,29.2969 Q550.5625,29.6094 549.7656,29.7656 Q548.9844,29.9219 548.2188,29.9219 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="101" x="569.25" y="28.432">LowLevelDriver</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="1199" y1="39" y2="39"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="51.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="212" x="27" y="57.9659">ioservice: boost::asio::io_service</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="70.1019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="196" x="27" y="77.0339">serial: boost::asio::serial_port</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="89.1698"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="144" x="27" y="96.1018">command: std::string</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="15" y="108.2377"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="277" x="27" y="115.1697">commandQueue: std::queue&lt;std::string&gt;</text><line style="stroke:#181818;stroke-width:0.5;" x1="8" x2="1199" y1="123.2717" y2="123.2717"/><ellipse cx="18" cy="138.3056" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="446" x="27" y="142.2376">LowLevelDriver(port_name: const std::string&amp;, baud_rate: uint32_t)</text><ellipse cx="18" cy="157.3735" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="117" x="27" y="161.3055">~LowLevelDriver()</text><ellipse cx="18" cy="176.4415" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="1167" x="27" y="180.3734">sendPositionData(arm_rotor_base: int64_t, arm_servo_base: int64_t, arm_servo_shoulder: int64_t, arm_rotor_hand: int64_t, arm_servo_hand: int64_t, time_to_goal: int64_t): bool</text><ellipse cx="18" cy="195.5094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="409" x="27" y="199.4414">sendPredefinedPosition(position: predefined_positions): bool</text><ellipse cx="18" cy="214.5773" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="320" x="27" y="218.5093">sendSerialMessage(command: std::string): bool</text><ellipse cx="18" cy="233.6452" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="623" x="27" y="237.5772">sendServoPositionData(servo_channel: int, pulse_width: int, speed: int = 0, time: int = 0): bool</text><ellipse cx="18" cy="252.7131" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="432" x="27" y="256.6451">setServoPositionOffset(servo_channel: int, offset_value: int): bool</text><ellipse cx="18" cy="271.781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="581" x="27" y="275.713">queueCommand(servo_channel: int, pulse_width: int, speed: int = 0, time: int = 0): bool</text><ellipse cx="18" cy="290.849" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="208" x="27" y="294.7809">sendQueuedCommands(): bool</text><ellipse cx="18" cy="309.9169" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="27" y="313.8489">clearCommand(): void</text><ellipse cx="18" cy="328.9848" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="211" x="27" y="332.9168">processCommandQueue(): bool</text></g><!--MD5=[7eb28c74a934c2d5550826cc89295d93]
class LynxarmHLD--><g id="elem_LynxarmHLD"><rect codeLine="20" fill="#F1F1F1" height="181.4754" id="LynxarmHLD" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="722" x="242.5" y="401"/><ellipse cx="557.25" cy="417" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M556.7188,423.9219 Q554.9688,423.9219 553.8281,423.1875 Q552.7031,422.4375 552.1406,421.0938 Q551.5938,419.7344 551.5938,417.9375 Q551.5938,415.9063 552.25,414.4531 Q552.9063,413 554.1875,412.2188 Q555.4688,411.4375 557.3438,411.4375 Q558.2344,411.4375 558.9063,411.625 Q559.5781,411.7969 560.2656,412.1406 L559.4531,414.1563 Q558.8281,413.8438 558.2813,413.7188 Q557.75,413.5938 557.2656,413.5938 Q556.0938,413.5938 555.3906,414.125 Q554.6875,414.6563 554.3906,415.6094 Q554.0938,416.5625 554.0938,417.8281 Q554.0938,419.8438 554.8125,420.8125 Q555.5313,421.7656 557.125,421.7656 Q557.7188,421.7656 558.3438,421.6094 Q558.9688,421.4531 559.7969,421.0781 L559.7969,423.2969 Q559.0625,423.6094 558.2656,423.7656 Q557.4844,423.9219 556.7188,423.9219 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="577.75" y="422.432">LynxarmHLD</text><line style="stroke:#181818;stroke-width:0.5;" x1="243.5" x2="963.5" y1="433" y2="433"/><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="250.5" y="445.034"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="696" x="262.5" y="451.9659">action_server_: rclcpp_action::Server&lt;lynxarm_interface::action::PredefinedCommandAction&gt;::SharedPtr</text><rect fill="none" height="6" style="stroke:#C82930;stroke-width:1.0;" width="6" x="250.5" y="464.1019"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="517" x="262.5" y="471.0339">service_: rclcpp::Service&lt;lynxarm_interface::srv::SetServoPosition&gt;::SharedPtr</text><line style="stroke:#181818;stroke-width:0.5;" x1="243.5" x2="963.5" y1="479.1358" y2="479.1358"/><ellipse cx="253.5" cy="494.1698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="339" x="262.5" y="498.1018">LynxarmHLD(options: const rclcpp::NodeOptions&amp;)</text><ellipse cx="253.5" cy="513.2377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="100" x="262.5" y="517.1697">~LynxarmHLD()</text><ellipse cx="253.5" cy="532.3056" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="650" x="262.5" y="536.2376">sendSingleServoToPosition(channel: uint8_t, degrees: uint8_t, time: uint16_t, speed: int = 1): bool</text><ellipse cx="253.5" cy="551.3735" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="365" x="262.5" y="555.3055">sendToPredefinedPosition(command: std::string): bool</text><ellipse cx="253.5" cy="570.4415" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="124" x="262.5" y="574.3734">initLynxarm(): bool</text></g><!--MD5=[e1290048f0c653031f8f5dd0652793cd]
class rclcpp::Node--><g id="elem_rclcpp::Node"><rect codeLine="30" fill="#F1F1F1" height="143.3396" id="rclcpp::Node" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="422" x="392.5" y="642"/><ellipse cx="556.25" cy="658" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M555.7188,664.9219 Q553.9688,664.9219 552.8281,664.1875 Q551.7031,663.4375 551.1406,662.0938 Q550.5938,660.7344 550.5938,658.9375 Q550.5938,656.9063 551.25,655.4531 Q551.9063,654 553.1875,653.2188 Q554.4688,652.4375 556.3438,652.4375 Q557.2344,652.4375 557.9063,652.625 Q558.5781,652.7969 559.2656,653.1406 L558.4531,655.1563 Q557.8281,654.8438 557.2813,654.7188 Q556.75,654.5938 556.2656,654.5938 Q555.0938,654.5938 554.3906,655.125 Q553.6875,655.6563 553.3906,656.6094 Q553.0938,657.5625 553.0938,658.8281 Q553.0938,660.8438 553.8125,661.8125 Q554.5313,662.7656 556.125,662.7656 Q556.7188,662.7656 557.3438,662.6094 Q557.9688,662.4531 558.7969,662.0781 L558.7969,664.2969 Q558.0625,664.6094 557.2656,664.7656 Q556.4844,664.9219 555.7188,664.9219 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="86" x="576.75" y="663.432">rclcpp::Node</text><line style="stroke:#181818;stroke-width:0.5;" x1="393.5" x2="813.5" y1="674" y2="674"/><line style="stroke:#181818;stroke-width:0.5;" x1="393.5" x2="813.5" y1="682" y2="682"/><ellipse cx="403.5" cy="697.034" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="356" x="412.5" y="700.9659">rclcpp::Node::make_shared(name: const std::string&amp;)</text><ellipse cx="403.5" cy="716.1019" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="386" x="412.5" y="720.0339">create_client(name: const std::string&amp;, callback: Function)</text><ellipse cx="403.5" cy="735.1698" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="396" x="412.5" y="739.1018">create_service(name: const std::string&amp;, callback: Function)</text><ellipse cx="403.5" cy="754.2377" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="37" x="412.5" y="758.1697">spin()</text><ellipse cx="403.5" cy="773.3056" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="75" x="412.5" y="777.2376">shutdown()</text></g><!--MD5=[493c80b268b01c14874f7a3af9c4a4ec]
class rclcpp::Client--><g id="elem_rclcpp::Client"><rect codeLine="38" fill="#F1F1F1" height="67.0679" id="rclcpp::Client" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="284" x="273.5" y="854.5"/><ellipse cx="366.75" cy="870.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M366.2188,877.4219 Q364.4688,877.4219 363.3281,876.6875 Q362.2031,875.9375 361.6406,874.5938 Q361.0938,873.2344 361.0938,871.4375 Q361.0938,869.4063 361.75,867.9531 Q362.4063,866.5 363.6875,865.7188 Q364.9688,864.9375 366.8438,864.9375 Q367.7344,864.9375 368.4063,865.125 Q369.0781,865.2969 369.7656,865.6406 L368.9531,867.6563 Q368.3281,867.3438 367.7813,867.2188 Q367.25,867.0938 366.7656,867.0938 Q365.5938,867.0938 364.8906,867.625 Q364.1875,868.1563 363.8906,869.1094 Q363.5938,870.0625 363.5938,871.3281 Q363.5938,873.3438 364.3125,874.3125 Q365.0313,875.2656 366.625,875.2656 Q367.2188,875.2656 367.8438,875.1094 Q368.4688,874.9531 369.2969,874.5781 L369.2969,876.7969 Q368.5625,877.1094 367.7656,877.2656 Q366.9844,877.4219 366.2188,877.4219 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="89" x="387.25" y="875.932">rclcpp::Client</text><line style="stroke:#181818;stroke-width:0.5;" x1="274.5" x2="556.5" y1="886.5" y2="886.5"/><line style="stroke:#181818;stroke-width:0.5;" x1="274.5" x2="556.5" y1="894.5" y2="894.5"/><ellipse cx="284.5" cy="909.534" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="258" x="293.5" y="913.4659">async_send_request(request: Request)</text></g><!--MD5=[97f87d2233c752809a3bf624814b9871]
class rclcpp::Service--><g id="elem_rclcpp::Service"><rect codeLine="42" fill="#F1F1F1" height="86.1358" id="rclcpp::Service" rx="2.5" ry="2.5" style="stroke:#181818;stroke-width:0.5;" width="397" x="593" y="845"/><ellipse cx="738.25" cy="861" fill="#ADD1B2" rx="11" ry="11" style="stroke:#181818;stroke-width:1.0;"/><path d="M737.7188,867.9219 Q735.9688,867.9219 734.8281,867.1875 Q733.7031,866.4375 733.1406,865.0938 Q732.5938,863.7344 732.5938,861.9375 Q732.5938,859.9063 733.25,858.4531 Q733.9063,857 735.1875,856.2188 Q736.4688,855.4375 738.3438,855.4375 Q739.2344,855.4375 739.9063,855.625 Q740.5781,855.7969 741.2656,856.1406 L740.4531,858.1563 Q739.8281,857.8438 739.2813,857.7188 Q738.75,857.5938 738.2656,857.5938 Q737.0938,857.5938 736.3906,858.125 Q735.6875,858.6563 735.3906,859.6094 Q735.0938,860.5625 735.0938,861.8281 Q735.0938,863.8438 735.8125,864.8125 Q736.5313,865.7656 738.125,865.7656 Q738.7188,865.7656 739.3438,865.6094 Q739.9688,865.4531 740.7969,865.0781 L740.7969,867.2969 Q740.0625,867.6094 739.2656,867.7656 Q738.4844,867.9219 737.7188,867.9219 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="98" x="758.75" y="866.432">rclcpp::Service</text><line style="stroke:#181818;stroke-width:0.5;" x1="594" x2="989" y1="877" y2="877"/><ellipse cx="604" cy="892.034" fill="none" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="242" x="613" y="895.9659">std::shared_ptr&lt;rclcpp::Node&gt; node</text><line style="stroke:#181818;stroke-width:0.5;" x1="594" x2="989" y1="904.0679" y2="904.0679"/><ellipse cx="604" cy="919.1019" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="371" x="613" y="923.0339">handle_request(request: Request, response: Response)</text></g><!--MD5=[cfb368d7bc828a35a1d5880c6daeac88]
link LowLevelDriver to LynxarmHLD--><g id="link_LowLevelDriver_LynxarmHLD"><path codeLine="47" d="M603.5,341.07 C603.5,361.7 603.5,382.15 603.5,400.98 " fill="none" id="LowLevelDriver-LynxarmHLD" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="596.3414" y="362.9381">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="596.1883" y="389.0683">1</text></g><!--MD5=[5b66ad0185d6f8eb8cf3e0ffe0a67569]
link LynxarmHLD to rclcpp::Node--><g id="link_LynxarmHLD_rclcpp::Node"><path codeLine="48" d="M603.5,582.3 C603.5,602.14 603.5,622.89 603.5,641.85 " fill="none" id="LynxarmHLD-rclcpp::Node" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="596.2102" y="604.4298">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="596.1172" y="630.0006">1</text></g><!--MD5=[437817a4e320acb6e1a4c879f1e4c0e0]
link rclcpp::Node to rclcpp::Client--><g id="link_rclcpp::Node_rclcpp::Client"><path codeLine="49" d="M526.49,785.16 C500.33,809.17 472.35,834.84 451.03,854.4 " fill="none" id="rclcpp::Node-rclcpp::Client" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="511.1874" y="807.3424">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="449.5331" y="842.6797">n</text></g><!--MD5=[f484b3b9635bc0617892eb5dbb4683ea]
link rclcpp::Node to rclcpp::Service--><g id="link_rclcpp::Node_rclcpp::Service"><path codeLine="50" d="M680.51,785.16 C702.62,805.44 726.02,826.92 745.61,844.89 " fill="none" id="rclcpp::Node-rclcpp::Service" style="stroke:#181818;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="7" x="681.0907" y="807.3424">1</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="8" x="729.347" y="833.2863">n</text></g><!--MD5=[e663beb823670e3b96df6b7d5a2c1fa6]
@startuml

class LowLevelDriver {
    - ioservice: boost::asio::io_service
    - serial: boost::asio::serial_port
    - command: std::string
    - commandQueue: std::queue<std::string>
    + LowLevelDriver(port_name: const std::string&, baud_rate: uint32_t)
    + ~LowLevelDriver()
    + sendPositionData(arm_rotor_base: int64_t, arm_servo_base: int64_t, arm_servo_shoulder: int64_t, arm_rotor_hand: int64_t, arm_servo_hand: int64_t, time_to_goal: int64_t): bool
    + sendPredefinedPosition(position: predefined_positions): bool
    + sendSerialMessage(command: std::string): bool
    + sendServoPositionData(servo_channel: int, pulse_width: int, speed: int = 0, time: int = 0): bool
    + setServoPositionOffset(servo_channel: int, offset_value: int): bool
    + queueCommand(servo_channel: int, pulse_width: int, speed: int = 0, time: int = 0): bool
    + sendQueuedCommands(): bool
    + clearCommand(): void
    + processCommandQueue(): bool
}

class LynxarmHLD {
    - action_server_: rclcpp_action::Server<lynxarm_interface::action::PredefinedCommandAction>::SharedPtr
    - service_: rclcpp::Service<lynxarm_interface::srv::SetServoPosition>::SharedPtr
    + LynxarmHLD(options: const rclcpp::NodeOptions&)
    + ~LynxarmHLD()
    + sendSingleServoToPosition(channel: uint8_t, degrees: uint8_t, time: uint16_t, speed: int = 1): bool
    + sendToPredefinedPosition(command: std::string): bool
    + initLynxarm(): bool
}

class rclcpp::Node {
    + rclcpp::Node::make_shared(name: const std::string&)
    + create_client(name: const std::string&, callback: Function)
    + create_service(name: const std::string&, callback: Function)
    + spin()
    + shutdown()
}

class rclcpp::Client {
    + async_send_request(request: Request)
}

class rclcpp::Service {
    + std::shared_ptr<rclcpp::Node> node
    + handle_request(request: Request, response: Response)
}

LowLevelDriver "1" - - "1" LynxarmHLD
LynxarmHLD "1" - - "1" rclcpp::Node
rclcpp::Node "1" - - "n" rclcpp::Client
rclcpp::Node "1" - - "n" rclcpp::Service

@enduml

PlantUML version 1.2022.7(Mon Aug 22 19:01:30 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>